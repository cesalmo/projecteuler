# -*- coding: utf-8 -*-
"""
Created on Mon Feb 20 10:31:02 2017
@author: Cesar Alvarez
Highly divisible triangular number
Problem 12
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred 
divisors?
"""
from p03_2 import *
from functools import reduce

def tr_gen():
    ''' triangle number generator.
    usage: a=tr_gen(); next(a)
    '''
    n=0
    m=1
    while True:
        o=m+n
        n=o
        m+=1
        yield(o)

def factor(o):
    '''for a given number o, return a tuple with prime divisor and its division
    '''
    a=eratosthenes()
    
    while True: 
        b=next(a)
        if o%b!=0:
            pass
        else:
            break
    return(b,o//b)

l=[]
def factor_list(o):
    '''for a given number return a list with (not all) divisors
    set l=[] outside function to work, and then l.clear()
    '''
    
    if factor(o)[0]==1 or factor(o)[1]==1:
        l.append(factor(o))
        return(l)
    else:
        factor_list(factor(o)[1])
        l.append(factor(o))
        return(l)

def get_toll_primes(o):
    l.clear()
    s,t=zip(*[(a,b) for a,b in factor_list(o)])
    u=s
    
    w=list(set([(a,u.count(a)) for a in u]))
    u,z=zip(*w)
    x=[a+1 for a in z]
    a=reduce(lambda a,b:a*b,x)
    l.clear()
    return(a)


#%% only factors of 10 are searched

if __name__=='__main__':
    b=500 #set number of factors
    gen=tr_gen()
    next(gen)
    gg=next(gen)

    while True:
        ii=next(gen)
        if ii%10==0:
            jj=get_toll_primes(ii)
            print('n={},nfactors={}'.format(ii,jj))
            if jj>=500:
                break
            
